[project]
name = "github-project-scorer"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "gitpython>=3.1.45",
    "openai>=1.109.1",
    "pathspec>=0.12.1",
    "pydantic-ai>=1.0.10",
    "pyyaml>=6.0.3",
    "rich>=14.1.0",
    "typer>=0.19.2",
    "python-dotenv>=1.0.0",
    "nbconvert>=7.16.6",
    "nbformat>=5.10.4",
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.23.0",
    "questionary>=2.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=30",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["scorer"]
omit = [
    "tests/*",
    "venv/*",
    "*/__pycache__/*",
    "*/site-packages/*",
    ".venv/*",
    "tmp/*",
    "reports/*",
    "htmlcov/*",
    "*.egg-info/*",
    "example.py",
    "main.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"